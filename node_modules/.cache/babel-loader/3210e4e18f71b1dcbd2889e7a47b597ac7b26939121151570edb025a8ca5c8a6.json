{"ast":null,"code":"var _jsxFileName = \"/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Traininglist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport dayjs from \"dayjs\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-material.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Traininglist() {\n  _s();\n  const [trainings, setTrainings] = useState([]);\n  const [columnDefs] = useState([{\n    headerName: \"Date\",\n    field: \"date\",\n    sortable: true,\n    filter: true,\n    valueFormatter: params => dayjs(params.value).format(\"DD.MM.YYYY HH:mm\")\n  }, {\n    headerName: \"Duration\",\n    field: \"duration\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"Activity\",\n    field: \"activity\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"Customer\",\n    field: \"customer\",\n    sortable: true,\n    filter: true\n  }]);\n  const getCustomerById = id => {\n    fetch(`${process.env.REACT_APP_API_URL}/customers/${id}`).then(response => {\n      if (response.ok) return response.json();else alert(\"Something went wrong in fetching customer by ID\");\n    }).then(data => console.log(data)).catch(err => console.error(err));\n  };\n  const getCustomerTrainings = id => {\n    fetch(`${process.env.REACT_APP_API_URL}/customers/${id}/trainings`).then(response => {\n      if (response.ok) return response.json();else alert(\"Something went wrong in fetching customer's trainings\");\n    }).then(data => console.log(data)).catch(err => console.error(err));\n  };\n  const getTrainings = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/trainings`);\n      if (!response.ok) {\n        throw new Error(\"Error occurred in fetching trainings data\");\n      }\n      const {\n        content: data\n      } = await response.json();\n      const trainingsWithCustomer = [];\n      for (const training of data) {\n        const customer = await getCustomerById(training.customer.id);\n        const customerTrainings = await getCustomerTrainings(customer.id);\n        const customerTrainingActivities = customerTrainings.map(t => t.activity);\n        const customerTrainingCount = customerTrainings.length;\n        trainingsWithCustomer.push({\n          ...training,\n          customer: `${customer.firstname} ${customer.lastname}`,\n          customerTrainingActivities,\n          customerTrainingCount\n        });\n      }\n      setTrainings(trainingsWithCustomer);\n    } catch (error) {\n      console.error(\"Error fetching trainings:\", error);\n    }\n  };\n  useEffect(() => {\n    getTrainings();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-material\",\n      style: {\n        width: \"80%\",\n        height: 600,\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: trainings,\n        columnDefs: columnDefs,\n        pagination: true,\n        paginationPageSize: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Traininglist, \"N+9A/f2s9/lMdzQR8rjcz00+n+g=\");\n_c = Traininglist;\nexport default Traininglist;\nvar _c;\n$RefreshReg$(_c, \"Traininglist\");","map":{"version":3,"names":["React","useState","useEffect","AgGridReact","dayjs","jsxDEV","_jsxDEV","Fragment","_Fragment","Traininglist","_s","trainings","setTrainings","columnDefs","headerName","field","sortable","filter","valueFormatter","params","value","format","getCustomerById","id","fetch","process","env","REACT_APP_API_URL","then","response","ok","json","alert","data","console","log","catch","err","error","getCustomerTrainings","getTrainings","Error","content","trainingsWithCustomer","training","customer","customerTrainings","customerTrainingActivities","map","t","activity","customerTrainingCount","length","push","firstname","lastname","children","className","style","width","height","margin","rowData","pagination","paginationPageSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Traininglist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport dayjs from \"dayjs\";\n\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-material.css\";\n\nfunction Traininglist() {\n  const [trainings, setTrainings] = useState([]);\n\n  const [columnDefs] = useState([\n    {\n      headerName: \"Date\",\n      field: \"date\",\n      sortable: true,\n      filter: true,\n      valueFormatter: (params) => dayjs(params.value).format(\"DD.MM.YYYY HH:mm\"),\n    },\n    { headerName: \"Duration\", field: \"duration\", sortable: true, filter: true },\n    { headerName: \"Activity\", field: \"activity\", sortable: true, filter: true },\n    { headerName: \"Customer\", field: \"customer\", sortable: true, filter: true },\n  ]);\n\n  const getCustomerById = (id) => {\n    fetch(`${process.env.REACT_APP_API_URL}/customers/${id}`)\n      .then((response) => {\n        if (response.ok) return response.json();\n        else alert(\"Something went wrong in fetching customer by ID\");\n      })\n      .then((data) => console.log(data))\n      .catch((err) => console.error(err));\n  };\n  \n  const getCustomerTrainings = (id) => {\n    fetch(`${process.env.REACT_APP_API_URL}/customers/${id}/trainings`)\n      .then((response) => {\n        if (response.ok) return response.json();\n        else alert(\"Something went wrong in fetching customer's trainings\");\n      })\n      .then((data) => console.log(data))\n      .catch((err) => console.error(err));\n  };\n  \n\n  const getTrainings = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/trainings`);\n      if (!response.ok) {\n        throw new Error(\"Error occurred in fetching trainings data\");\n      }\n      const { content: data } = await response.json();\n  \n      const trainingsWithCustomer = [];\n  \n      for (const training of data) {\n        const customer = await getCustomerById(training.customer.id);\n        const customerTrainings = await getCustomerTrainings(customer.id);\n  \n        const customerTrainingActivities = customerTrainings.map((t) => t.activity);\n        const customerTrainingCount = customerTrainings.length;\n  \n        trainingsWithCustomer.push({\n          ...training,\n          customer: `${customer.firstname} ${customer.lastname}`,\n          customerTrainingActivities,\n          customerTrainingCount,\n        });\n      }\n  \n      setTrainings(trainingsWithCustomer);\n    } catch (error) {\n      console.error(\"Error fetching trainings:\", error);\n    }\n  };\n  \n  \n\n  useEffect(() => {\n    getTrainings();\n  }, []);\n\n  return (\n    <>\n      <div className=\"ag-theme-material\" style={{ width: \"80%\", height: 600, margin: \"auto\" }}>\n        <AgGridReact rowData={trainings} columnDefs={columnDefs} pagination={true} paginationPageSize={10} />\n      </div>\n    </>\n  );\n}\n\nexport default Traininglist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
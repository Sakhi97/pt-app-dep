{"ast":null,"code":"var _jsxFileName = \"/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Traininglist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport dayjs from \"dayjs\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-material.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Traininglist() {\n  _s();\n  const [trainings, setTrainings] = useState([]);\n  const [columnDefs] = useState([{\n    headerName: \"Date\",\n    field: \"date\",\n    sortable: true,\n    filter: true,\n    valueFormatter: params => dayjs(params.value).format(\"DD.MM.YYYY HH:mm\")\n  }, {\n    headerName: \"Duration\",\n    field: \"duration\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"Activity\",\n    field: \"activity\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"Customer\",\n    field: \"customer\",\n    sortable: true,\n    filter: true\n  }]);\n  const getCustomerById = async id => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/customers/${id}`);\n      if (!response.ok) {\n        throw new Error(\"Error occurred in fetching customer by ID\");\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"Error fetching customer:\", error);\n    }\n  };\n  const getCustomerTrainings = async id => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/customers/${id}/trainings`);\n      if (!response.ok) {\n        throw new Error(\"Error occurred in fetching customer's trainings\");\n      }\n      const {\n        content: data\n      } = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"Error fetching customer's trainings:\", error);\n    }\n  };\n  const getTrainings = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/customers`);\n      if (!response.ok) {\n        throw new Error(\"Error occurred in fetching customers data\");\n      }\n      const {\n        content: customers\n      } = await response.json();\n      const trainingsWithCustomer = [];\n      for (const customer of customers) {\n        const customerData = await getCustomerById(customer.id);\n        const customerTrainings = await getCustomerTrainings(customer.id);\n        const trainings = customerTrainings.map(training => ({\n          date: training.date,\n          duration: training.duration,\n          activity: training.activity,\n          customer: `${customerData.firstname} ${customerData.lastname}`\n        }));\n        trainingsWithCustomer.push(...trainings);\n      }\n      setTrainings(trainingsWithCustomer);\n    } catch (error) {\n      console.error(\"Error fetching trainings:\", error);\n    }\n  };\n  useEffect(() => {\n    getTrainings();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-material\",\n      style: {\n        width: \"80%\",\n        height: 600,\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: trainings,\n        columnDefs: columnDefs,\n        pagination: true,\n        paginationPageSize: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Traininglist, \"N+9A/f2s9/lMdzQR8rjcz00+n+g=\");\n_c = Traininglist;\nexport default Traininglist;\nvar _c;\n$RefreshReg$(_c, \"Traininglist\");","map":{"version":3,"names":["React","useState","useEffect","AgGridReact","dayjs","jsxDEV","_jsxDEV","Fragment","_Fragment","Traininglist","_s","trainings","setTrainings","columnDefs","headerName","field","sortable","filter","valueFormatter","params","value","format","getCustomerById","id","response","fetch","process","env","REACT_APP_API_URL","ok","Error","data","json","error","console","getCustomerTrainings","content","getTrainings","customers","trainingsWithCustomer","customer","customerData","customerTrainings","map","training","date","duration","activity","firstname","lastname","push","children","className","style","width","height","margin","rowData","pagination","paginationPageSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Traininglist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport dayjs from \"dayjs\";\n\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-material.css\";\n\nfunction Traininglist() {\n  const [trainings, setTrainings] = useState([]);\n\n  const [columnDefs] = useState([\n    {\n      headerName: \"Date\",\n      field: \"date\",\n      sortable: true,\n      filter: true,\n      valueFormatter: (params) => dayjs(params.value).format(\"DD.MM.YYYY HH:mm\"),\n    },\n    { headerName: \"Duration\", field: \"duration\", sortable: true, filter: true },\n    { headerName: \"Activity\", field: \"activity\", sortable: true, filter: true },\n    { headerName: \"Customer\", field: \"customer\", sortable: true, filter: true },\n  ]);\n\n  const getCustomerById = async (id) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/customers/${id}`);\n      if (!response.ok) {\n        throw new Error(\"Error occurred in fetching customer by ID\");\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"Error fetching customer:\", error);\n    }\n  };\n\n  const getCustomerTrainings = async (id) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/customers/${id}/trainings`);\n      if (!response.ok) {\n        throw new Error(\"Error occurred in fetching customer's trainings\");\n      }\n      const { content: data } = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"Error fetching customer's trainings:\", error);\n    }\n  };\n\n  const getTrainings = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/customers`);\n      if (!response.ok) {\n        throw new Error(\"Error occurred in fetching customers data\");\n      }\n      const { content: customers } = await response.json();\n\n      const trainingsWithCustomer = [];\n\n      for (const customer of customers) {\n        const customerData = await getCustomerById(customer.id);\n        const customerTrainings = await getCustomerTrainings(customer.id);\n\n        const trainings = customerTrainings.map((training) => ({\n          date: training.date,\n          duration: training.duration,\n          activity: training.activity,\n          customer: `${customerData.firstname} ${customerData.lastname}`,\n        }));\n\n        trainingsWithCustomer.push(...trainings);\n      }\n\n      setTrainings(trainingsWithCustomer);\n    } catch (error) {\n      console.error(\"Error fetching trainings:\", error);\n    }\n  };\n\n  useEffect(() => {\n    getTrainings();\n  }, []);\n\n  return (\n    <>\n      <div className=\"ag-theme-material\" style={{ width: \"80%\", height: 600, margin: \"auto\" }}>\n        <AgGridReact rowData={trainings} columnDefs={columnDefs} pagination={true} paginationPageSize={10} />\n      </div>\n    </>\n  );\n}\n\nexport default Traininglist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
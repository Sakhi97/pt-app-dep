{"ast":null,"code":"var _jsxFileName = \"/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Traininglist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid, GridToolbarContainer, GridToolbarExport, GridToolbarColumnsButton, GridToolbarFilterButton, GridToolbarDensitySelector } from \"@mui/x-data-grid\";\nimport dayjs from \"dayjs\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TrainingList() {\n  _s();\n  const API_URL = process.env.REACT_APP_API_URL;\n  const [trainings, setTrainings] = useState([]);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  // ... the rest of the component code\n\n  const deleteTraining = row => {\n    if (window.confirm(\"Are you sure?\")) {\n      const url = row.links.find(link => link.rel === \"self\").href;\n      fetch(url, {\n        method: \"DELETE\"\n      }).then(response => {\n        if (response.ok) {\n          setTrainings(prevTrainings => prevTrainings.filter(t => t.links[0].href !== url));\n          setSnackbarMessage(\"Training deleted successfully\");\n          setSnackbarOpen(true);\n        } else {\n          alert(\"Something went wrong in deletion\");\n        }\n      }).catch(err => console.error(err));\n    }\n  };\n\n  // ... the rest of the component code\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 600,\n        width: \"65%\",\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        components: {\n          Toolbar: CustomToolbar\n        },\n        rows: trainings,\n        columns: columnDefs,\n        initialState: {\n          pagination: {\n            paginationModel: {\n              pageSize: 10\n            }\n          }\n        },\n        pagination: true,\n        pageSize: 10,\n        pageSizeOptions: [5, 10, 15],\n        getRowId: row => row.links.find(link => link.rel === \"self\").href\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      message: snackbarMessage,\n      autoHideDuration: 3000,\n      onClose: handleSnackbarClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TrainingList, \"GPdjk83/c3IfgoE8XNsakrJaAtc=\");\n_c = TrainingList;\nexport default TrainingList;\nvar _c;\n$RefreshReg$(_c, \"TrainingList\");","map":{"version":3,"names":["React","useState","useEffect","DataGrid","GridToolbarContainer","GridToolbarExport","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","dayjs","Button","Snackbar","DeleteIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","TrainingList","_s","API_URL","process","env","REACT_APP_API_URL","trainings","setTrainings","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleSnackbarClose","event","reason","deleteTraining","row","window","confirm","url","links","find","link","rel","href","fetch","method","then","response","ok","prevTrainings","filter","t","alert","catch","err","console","error","children","style","height","width","margin","components","Toolbar","CustomToolbar","rows","columns","columnDefs","initialState","pagination","paginationModel","pageSize","pageSizeOptions","getRowId","fileName","_jsxFileName","lineNumber","columnNumber","open","message","autoHideDuration","onClose","_c","$RefreshReg$"],"sources":["/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Traininglist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport,\n  GridToolbarColumnsButton,\n  GridToolbarFilterButton,\n  GridToolbarDensitySelector,\n} from \"@mui/x-data-grid\";\n\nimport dayjs from \"dayjs\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nfunction TrainingList() {\n  const API_URL = process.env.REACT_APP_API_URL;\n  const [trainings, setTrainings] = useState([]);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  // ... the rest of the component code\n\n  const deleteTraining = (row) => {\n    if (window.confirm(\"Are you sure?\")) {\n      const url = row.links.find((link) => link.rel === \"self\").href;\n      fetch(url, { method: \"DELETE\" })\n        .then((response) => {\n          if (response.ok) {\n            setTrainings((prevTrainings) =>\n              prevTrainings.filter((t) => t.links[0].href !== url)\n            );\n            setSnackbarMessage(\"Training deleted successfully\");\n            setSnackbarOpen(true);\n          } else {\n            alert(\"Something went wrong in deletion\");\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  // ... the rest of the component code\n\n  return (\n    <>\n      <div style={{ height: 600, width: \"65%\", margin: \"auto\" }}>\n        <DataGrid\n          components={{ Toolbar: CustomToolbar }}\n          rows={trainings}\n          columns={columnDefs}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 10 } },\n          }}\n          pagination\n          pageSize={10}\n          pageSizeOptions={[5, 10, 15]}\n          getRowId={(row) => row.links.find((link) => link.rel === \"self\").href}\n        />\n      </div>\n      <Snackbar\n        open={snackbarOpen}\n        message={snackbarMessage}\n        autoHideDuration={3000}\n        onClose={handleSnackbarClose}\n      />\n    </>\n  );\n}\n\nexport default TrainingList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction Calendar() {\n  _s();\n  const [trainings, setTrainings] = useState([]);\n  useEffect(() => {\n    fetchTrainings();\n  }, []);\n  const fetchTrainings = async () => {\n    try {\n      const response = await fetch(API_URL + '/trainings');\n      const data = await response.json();\n      const formattedTrainings = data.content.map(training => {\n        const title = training.customer ? `${training.customer.firstname} ${training.customer.lastname}` : 'Unknown Customer';\n        return {\n          title,\n          start: training.date,\n          end: training.date\n        };\n      });\n      setTrainings(formattedTrainings);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleDateClick = info => {\n    console.log('Clicked on date:', info.dateStr);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      },\n      events: trainings,\n      dateClick: handleDateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"uabLU8KjmDYF8yoFx+QKK9rR174=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","Calendar","_s","trainings","setTrainings","fetchTrainings","response","fetch","data","json","formattedTrainings","content","map","training","title","customer","firstname","lastname","start","date","end","err","console","error","handleDateClick","info","log","dateStr","className","children","plugins","initialView","headerToolbar","left","center","right","events","dateClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nfunction Calendar() {\n  const [trainings, setTrainings] = useState([]);\n\n  useEffect(() => {\n    fetchTrainings();\n  }, []);\n\n\n  const fetchTrainings = async () => {\n    try {\n      const response = await fetch(API_URL + '/trainings');\n      const data = await response.json();\n      const formattedTrainings = data.content.map((training) => {\n        const title = training.customer\n          ? `${training.customer.firstname} ${training.customer.lastname}`\n          : 'Unknown Customer';\n        return {\n          title,\n          start: training.date,\n          end: training.date,\n        };\n      });\n      setTrainings(formattedTrainings);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  \n\n  const handleDateClick = (info) => {\n    console.log('Clicked on date:', info.dateStr);\n  };\n\n  return (\n    <div className=\"calendar\">\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        headerToolbar={{\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay',\n        }}\n        events={trainings}\n        dateClick={handleDateClick}\n      />\n    </div>\n  );\n}\n\nexport default Calendar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACde,cAAc,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,OAAO,GAAG,YAAY,CAAC;MACpD,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC,MAAMC,kBAAkB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,QAAQ,IAAK;QACxD,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,GAC1B,GAAEF,QAAQ,CAACE,QAAQ,CAACC,SAAU,IAAGH,QAAQ,CAACE,QAAQ,CAACE,QAAS,EAAC,GAC9D,kBAAkB;QACtB,OAAO;UACLH,KAAK;UACLI,KAAK,EAAEL,QAAQ,CAACM,IAAI;UACpBC,GAAG,EAAEP,QAAQ,CAACM;QAChB,CAAC;MACH,CAAC,CAAC;MACFf,YAAY,CAACM,kBAAkB,CAAC;IAClC,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAGD,MAAMG,eAAe,GAAIC,IAAI,IAAK;IAChCH,OAAO,CAACI,GAAG,CAAC,kBAAkB,EAAED,IAAI,CAACE,OAAO,CAAC;EAC/C,CAAC;EAED,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBjC,OAAA,CAACL,YAAY;MACXuC,OAAO,EAAE,CAACtC,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;MAC5DqC,WAAW,EAAC,cAAc;MAC1BC,aAAa,EAAE;QACbC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;MACT,CAAE;MACFC,MAAM,EAAEjC,SAAU;MAClBkC,SAAS,EAAEb;IAAgB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC3B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACvC,EAAA,CAhDQD,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AAkDjB,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
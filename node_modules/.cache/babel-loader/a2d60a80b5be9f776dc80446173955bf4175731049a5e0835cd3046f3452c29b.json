{"ast":null,"code":"var _jsxFileName = \"/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Customerlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from 'ag-grid-react';\nimport { API_URL } from \"../constants\";\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-material.css';\n\n// Separate here all functions in own file (delete, edit, ...)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Customerlist() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n\n  // We are not going to use setColumnDefs, so no need to define it\n  const [columnDefs] = useState([{\n    field: 'firstname',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'lastname',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'streetaddress',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'postcode',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'city',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'email',\n    sortable: true,\n    filter: true\n  }, {\n    field: 'phone',\n    sortable: true,\n    filter: true\n  }]);\n  const getCustomers = () => {\n    fetch(API_URL + '/customers').then(response => {\n      if (response.ok) return response.json();else alert('Something went wrong in GET request');\n    }).then(data => setCustomers(data.content)).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    //Fetch cars (must be httpS)\n    getCustomers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-material\",\n      style: {\n        width: '80%',\n        height: 600,\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact\n      //Define where the data comes from: \n      , {\n        rowData: customers,\n        columnDefs: columnDefs,\n        pagination: true,\n        paginationPageSize: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Customerlist, \"xDw7dwu1p/FQCTyxxuU9MIYBmwg=\");\n_c = Customerlist;\nexport default Carlist;\nvar _c;\n$RefreshReg$(_c, \"Customerlist\");","map":{"version":3,"names":["React","useState","useEffect","AgGridReact","API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","Customerlist","_s","customers","setCustomers","columnDefs","field","sortable","filter","getCustomers","fetch","then","response","ok","json","alert","data","content","catch","err","console","error","children","className","style","width","height","margin","rowData","pagination","paginationPageSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","Carlist","$RefreshReg$"],"sources":["/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Customerlist.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { AgGridReact } from 'ag-grid-react';\n\nimport { API_URL } from \"../constants\";\n\n\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-material.css';\n\n// Separate here all functions in own file (delete, edit, ...)\n\nfunction Customerlist() {\n    const [customers, setCustomers] = useState([]);\n \n\n    // We are not going to use setColumnDefs, so no need to define it\n    const [columnDefs] = useState([\n        {field: 'firstname', sortable: true, filter: true},\n        {field: 'lastname', sortable: true, filter: true},\n        {field: 'streetaddress', sortable: true, filter: true},\n        {field: 'postcode', sortable: true, filter: true},\n        {field: 'city', sortable: true, filter: true},\n        {field: 'email', sortable: true, filter: true},\n        {field: 'phone', sortable: true, filter: true}\n    ])\n\n    \n\n    const getCustomers = () => {\n        fetch(API_URL + '/customers')\n        .then(response => {\n            if(response.ok)\n                return response.json();\n            else\n                alert('Something went wrong in GET request');\n        })\n        .then(data => setCustomers(data.content))\n        .catch(err => console.error(err))\n    }\n\n   \n   \n\n    useEffect(() => {\n        //Fetch cars (must be httpS)\n        getCustomers();\n    }, []);\n\n    return (\n        <>\n            \n            <div \n              className='ag-theme-material'\n              style={{width:'80%', height:600, margin:'auto'}}>\n              <AgGridReact\n                //Define where the data comes from: \n                rowData={customers}\n                columnDefs={columnDefs}\n                pagination={true}\n                paginationPageSize={10}\n              />\n            </div>\n        </>\n    )\n}\n\nexport default Carlist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,WAAW,QAAQ,eAAe;AAE3C,SAASC,OAAO,QAAQ,cAAc;AAGtC,OAAO,sCAAsC;AAC7C,OAAO,gDAAgD;;AAEvD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAG9C;EACA,MAAM,CAACY,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAC1B;IAACa,KAAK,EAAE,WAAW;IAAEC,QAAQ,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,EAClD;IAACF,KAAK,EAAE,UAAU;IAAEC,QAAQ,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,EACjD;IAACF,KAAK,EAAE,eAAe;IAAEC,QAAQ,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,EACtD;IAACF,KAAK,EAAE,UAAU;IAAEC,QAAQ,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,EACjD;IAACF,KAAK,EAAE,MAAM;IAAEC,QAAQ,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,EAC7C;IAACF,KAAK,EAAE,OAAO;IAAEC,QAAQ,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,EAC9C;IAACF,KAAK,EAAE,OAAO;IAAEC,QAAQ,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,CACjD,CAAC;EAIF,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAACd,OAAO,GAAG,YAAY,CAAC,CAC5Be,IAAI,CAACC,QAAQ,IAAI;MACd,IAAGA,QAAQ,CAACC,EAAE,EACV,OAAOD,QAAQ,CAACE,IAAI,EAAE,CAAC,KAEvBC,KAAK,CAAC,qCAAqC,CAAC;IACpD,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAIZ,YAAY,CAACY,IAAI,CAACC,OAAO,CAAC,CAAC,CACxCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EAKDzB,SAAS,CAAC,MAAM;IACZ;IACAe,YAAY,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eAEIxB,OAAA;MACEyB,SAAS,EAAC,mBAAmB;MAC7BC,KAAK,EAAE;QAACC,KAAK,EAAC,KAAK;QAAEC,MAAM,EAAC,GAAG;QAAEC,MAAM,EAAC;MAAM,CAAE;MAAAL,QAAA,eAChDxB,OAAA,CAACH;MACC;MAAA;QACAiC,OAAO,EAAEzB,SAAU;QACnBE,UAAU,EAAEA,UAAW;QACvBwB,UAAU,EAAE,IAAK;QACjBC,kBAAkB,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACvB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACE,iBACP;AAEX;AAAChC,EAAA,CArDQD,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAuDrB,eAAemC,OAAO;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
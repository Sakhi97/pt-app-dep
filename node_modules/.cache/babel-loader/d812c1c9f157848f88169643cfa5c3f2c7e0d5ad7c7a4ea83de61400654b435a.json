{"ast":null,"code":"var _jsxFileName = \"/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Customerlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport AddCustomer from \"./AddCustomer\";\nimport EditCustomer from \"./EditCustomer\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-material.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Customerlist() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [msg, setMsg] = useState();\n  const [columnDefs] = useState([{\n    headerName: \"First Name\",\n    field: \"firstname\",\n    sortable: true,\n    filter: true,\n    width: 140\n  }, {\n    headerName: \"Last Name\",\n    field: \"lastname\",\n    sortable: true,\n    filter: true,\n    width: 140\n  }, {\n    headerName: \"Address\",\n    field: \"streetaddress\",\n    sortable: true,\n    filter: true,\n    width: 160\n  }, {\n    headerName: \"Post code\",\n    field: \"postcode\",\n    sortable: true,\n    filter: true,\n    width: 120\n  }, {\n    headerName: \"City\",\n    field: \"city\",\n    sortable: true,\n    filter: true,\n    width: 120\n  }, {\n    headerName: \"Email\",\n    field: \"email\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"Phone\",\n    field: \"phone\",\n    sortable: true,\n    filter: true,\n    width: 160\n  }, {\n    cellRenderer: params => /*#__PURE__*/_jsxDEV(EditCustomer, {\n      params: params.data,\n      updateCustomer: updateCustomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 33\n    }, this),\n    width: 80\n  }, {\n    cellRenderer: params => /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      color: \"error\",\n      onClick: () => deleteCustomer(params),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this),\n    width: 80\n  }]);\n  const deleteCustomer = params => {\n    if (window.confirm(\"Are you sure?\")) {\n      fetch(params.data.links[0].href, {\n        method: \"DELETE\"\n      }).then(response => {\n        if (response.ok) {\n          setMsg(\"Customer has been deleted successfully\");\n          setOpen(true);\n          getCustomers();\n        } else {\n          alert(\"Something went wrong in deletion\");\n        }\n      }).catch(err => console.error(err));\n    }\n  };\n  const getCustomers = () => {\n    fetch(`${process.env.REACT_APP_API_URL}/customers`).then(response => {\n      if (response.ok) return response.json();else alert(\"Something went wrong in GET request\");\n    }).then(data => setCustomers(data.content)).catch(err => console.error(err));\n  };\n  const addCustomer = customer => {\n    fetch(process.env.REACT_APP_API_URL + '/customers', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(customer)\n    }).then(response => {\n      if (response.ok) {\n        getCustomers();\n      } else {\n        alert('Something went wrong in addition: ' + response.statusText);\n      }\n    }).catch(err => console.error(err));\n  };\n  const updateCustomer = (updatedCustomer, url) => {\n    fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedCustomer)\n    }).then(response => {\n      if (response.ok) {\n        setMsg(\"Customer has been edited successfully\");\n        setOpen(true);\n        getCustomers();\n      } else {\n        alert('Something went wrong when editing');\n      }\n    }).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    getCustomers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddCustomer, {\n      addCustomer: addCustomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-material\",\n      style: {\n        width: \"80%\",\n        height: 600,\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: customers,\n        columnDefs: columnDefs,\n        pagination: true,\n        paginationPageSize: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      message: msg,\n      autoHideDuration: 3000,\n      onClose: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Customerlist, \"F3IsgWIVuEa3IfYnVUvkshmBKVs=\");\n_c = Customerlist;\nexport default Customerlist;\nvar _c;\n$RefreshReg$(_c, \"Customerlist\");","map":{"version":3,"names":["React","useState","useEffect","AgGridReact","Button","Snackbar","AddCustomer","EditCustomer","jsxDEV","_jsxDEV","Fragment","_Fragment","Customerlist","_s","customers","setCustomers","open","setOpen","msg","setMsg","columnDefs","headerName","field","sortable","filter","width","cellRenderer","params","data","updateCustomer","fileName","_jsxFileName","lineNumber","columnNumber","size","color","onClick","deleteCustomer","children","window","confirm","fetch","links","href","method","then","response","ok","getCustomers","alert","catch","err","console","error","process","env","REACT_APP_API_URL","json","content","addCustomer","customer","headers","body","JSON","stringify","statusText","updatedCustomer","url","className","style","height","margin","rowData","pagination","paginationPageSize","message","autoHideDuration","onClose","_c","$RefreshReg$"],"sources":["/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Customerlist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport AddCustomer from \"./AddCustomer\";\nimport EditCustomer from \"./EditCustomer\";\n\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-material.css\";\n\nfunction Customerlist() {\n  const [customers, setCustomers] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [msg, setMsg] = useState();\n\n  const [columnDefs] = useState([\n    { headerName: \"First Name\", field: \"firstname\", sortable: true, filter: true, width: 140 },\n    { headerName: \"Last Name\", field: \"lastname\", sortable: true, filter: true, width: 140 },\n    { headerName: \"Address\", field: \"streetaddress\", sortable: true, filter: true, width: 160 },\n    { headerName: \"Post code\", field: \"postcode\", sortable: true, filter: true, width: 120 },\n    { headerName: \"City\", field: \"city\", sortable: true, filter: true, width: 120 },\n    { headerName: \"Email\", field: \"email\", sortable: true, filter: true },\n    { headerName: \"Phone\", field: \"phone\", sortable: true, filter: true, width: 160 },\n    {\n        cellRenderer: params => <EditCustomer params={params.data} updateCustomer={updateCustomer} />,\n        width: 80\n    },\n    {\n      cellRenderer: (params) => (\n        <Button\n          size=\"small\"\n          color=\"error\"\n          onClick={() => deleteCustomer(params)}\n        >\n          Delete\n        </Button>\n      ),\n      width: 80,\n    },\n  ]);\n\n  const deleteCustomer = (params) => {\n    if (window.confirm(\"Are you sure?\")) {\n      fetch(params.data.links[0].href, { method: \"DELETE\" })\n        .then((response) => {\n          if (response.ok) {\n            setMsg(\"Customer has been deleted successfully\");\n            setOpen(true);\n            getCustomers();\n          } else {\n            alert(\"Something went wrong in deletion\");\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n  \n\n  const getCustomers = () => {\n    fetch(`${process.env.REACT_APP_API_URL}/customers`)\n      .then((response) => {\n        if (response.ok) return response.json();\n        else alert(\"Something went wrong in GET request\");\n      })\n      .then((data) => setCustomers(data.content))\n      .catch((err) => console.error(err));\n  };\n\n\n\n  const addCustomer = (customer) => {\n    fetch(process.env.REACT_APP_API_URL + '/customers', {\n      method: 'POST',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify(customer)\n    })\n    .then(response => {\n      if (response.ok) {\n        getCustomers();\n      } else {\n        alert('Something went wrong in addition: ' + response.statusText);\n      }\n    })\n    .catch(err => console.error(err))\n  }\n\n  const updateCustomer = (updatedCustomer, url) => {\n\n    fetch(url, {\n        method: 'PUT',\n        headers: {'Content-type':'application/json'},\n        body: JSON.stringify(updatedCustomer)\n    })\n    .then(response => {\n        if (response.ok) {\n            setMsg(\"Customer has been edited successfully\");\n            setOpen(true);\n            getCustomers();\n        }\n        else {\n            alert('Something went wrong when editing');\n        }\n    })\n    .catch(err => console.error(err))\n}\n\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  return (\n    <>\n    <AddCustomer addCustomer={addCustomer} />\n      <div\n        className=\"ag-theme-material\"\n        style={{ width: \"80%\", height: 600, margin: \"auto\" }}\n      >\n        <AgGridReact\n          rowData={customers}\n          columnDefs={columnDefs}\n          pagination={true}\n          paginationPageSize={10}\n        />\n      </div>\n      <Snackbar\n        open={open}\n        message={msg}\n        autoHideDuration={3000}\n        onClose={() => setOpen(false)}\n      />\n    </>\n  );\n}\n\nexport default Customerlist;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
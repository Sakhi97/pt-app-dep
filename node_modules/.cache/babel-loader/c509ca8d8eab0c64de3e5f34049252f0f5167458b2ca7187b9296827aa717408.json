{"ast":null,"code":"var _jsxFileName = \"/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Traininglist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport dayjs from \"dayjs\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-material.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Traininglist(_ref) {\n  _s();\n  let {\n    trainingsModified,\n    setTrainingsModified\n  } = _ref;\n  const [trainings, setTrainings] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [msg, setMsg] = useState();\n  const [columnDefs] = useState([{\n    headerName: \"Date\",\n    field: \"date\",\n    sortable: true,\n    filter: true,\n    valueFormatter: params => dayjs(params.value).format(\"DD.MM.YYYY HH:mm\")\n  }, {\n    headerName: \"Duration\",\n    field: \"duration\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"Activity\",\n    field: \"activity\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"Customer\",\n    field: \"customer\",\n    sortable: true,\n    filter: true\n  }, {\n    headerName: \"\",\n    cellRenderer: params => /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      color: \"error\",\n      onClick: () => deleteTraining(params),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this),\n    width: 120\n  }]);\n  const deleteTraining = params => {\n    if (window.confirm(\"Are you sure?\")) {\n      fetch(params.data.links[0].href, {\n        method: \"DELETE\"\n      }).then(response => {\n        if (response.ok) {\n          setMsg(\"Training has been deleted successfully\");\n          setOpen(true);\n          getTrainings();\n        } else {\n          alert(\"Something went wrong in deletion\");\n        }\n      }).catch(err => console.error(err));\n    }\n  };\n  const getTrainings = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/trainings`);\n      if (!response.ok) {\n        throw new Error(\"Error occurred in fetching trainings data\");\n      }\n      const {\n        content: data\n      } = await response.json();\n      const fetchCustomer = async training => {\n        var _training$links$find;\n        const customerUrl = (_training$links$find = training.links.find(link => link.rel === \"customer\")) === null || _training$links$find === void 0 ? void 0 : _training$links$find.href;\n        const customerResponse = await fetch(customerUrl);\n        if (!customerResponse.ok) {\n          throw new Error(\"Could not fetch customer data for training\");\n        }\n        return await customerResponse.json();\n      };\n      const trainingsWithCustomer = await Promise.all(data.map(async training => {\n        const customerData = await fetchCustomer(training);\n        const customer = `${customerData.firstname} ${customerData.lastname}`;\n        return {\n          ...training,\n          customer\n        };\n      }));\n      setTrainings(trainingsWithCustomer);\n    } catch (error) {\n      console.error(\"Error fetching trainings:\", error);\n    }\n  };\n  useEffect(() => {\n    getTrainings();\n    if (trainingsModified) {\n      setTrainingsModified(false);\n    }\n  }, [trainingsModified]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-material\",\n      style: {\n        width: \"80%\",\n        height: 600,\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: trainings,\n        columnDefs: columnDefs,\n        pagination: true,\n        paginationPageSize: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      message: msg,\n      autoHideDuration: 3000,\n      onClose: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Traininglist, \"1FQbz6QDc6WLGhgibDtx6zdrovA=\");\n_c = Traininglist;\nexport default Traininglist;\nvar _c;\n$RefreshReg$(_c, \"Traininglist\");","map":{"version":3,"names":["React","useState","useEffect","AgGridReact","dayjs","Button","Snackbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Traininglist","_ref","_s","trainingsModified","setTrainingsModified","trainings","setTrainings","open","setOpen","msg","setMsg","columnDefs","headerName","field","sortable","filter","valueFormatter","params","value","format","cellRenderer","size","color","onClick","deleteTraining","children","fileName","_jsxFileName","lineNumber","columnNumber","width","window","confirm","fetch","data","links","href","method","then","response","ok","getTrainings","alert","catch","err","console","error","process","env","REACT_APP_API_URL","Error","content","json","fetchCustomer","training","_training$links$find","customerUrl","find","link","rel","customerResponse","trainingsWithCustomer","Promise","all","map","customerData","customer","firstname","lastname","className","style","height","margin","rowData","pagination","paginationPageSize","message","autoHideDuration","onClose","_c","$RefreshReg$"],"sources":["/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/src/components/Traininglist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport dayjs from \"dayjs\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\n\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-material.css\";\n\nfunction Traininglist({ trainingsModified, setTrainingsModified }) {\n  const [trainings, setTrainings] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [msg, setMsg] = useState();\n\n  const [columnDefs] = useState([\n    {\n      headerName: \"Date\",\n      field: \"date\",\n      sortable: true,\n      filter: true,\n      valueFormatter: (params) => dayjs(params.value).format(\"DD.MM.YYYY HH:mm\"),\n    },\n    { headerName: \"Duration\", field: \"duration\", sortable: true, filter: true },\n    { headerName: \"Activity\", field: \"activity\", sortable: true, filter: true },\n    { headerName: \"Customer\", field: \"customer\", sortable: true, filter: true },\n    {\n      headerName: \"\",\n      cellRenderer: (params) => (\n        <Button\n          size=\"small\"\n          color=\"error\"\n          onClick={() => deleteTraining(params)}\n        >\n          Delete\n        </Button>\n      ),\n      width: 120,\n    },\n  ]);\n\n  const deleteTraining = (params) => {\n    if (window.confirm(\"Are you sure?\")) {\n      fetch(params.data.links[0].href, { method: \"DELETE\" })\n        .then((response) => {\n          if (response.ok) {\n            setMsg(\"Training has been deleted successfully\");\n            setOpen(true);\n            getTrainings();\n          } else {\n            alert(\"Something went wrong in deletion\");\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  const getTrainings = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/trainings`);\n      if (!response.ok) {\n        throw new Error(\"Error occurred in fetching trainings data\");\n      }\n      const { content: data } = await response.json();\n\n      const fetchCustomer = async (training) => {\n        const customerUrl = training.links.find((link) => link.rel === \"customer\")?.href;\n        const customerResponse = await fetch(customerUrl);\n        if (!customerResponse.ok) {\n          throw new Error(\"Could not fetch customer data for training\");\n        }\n        return await customerResponse.json();\n      };\n\n      const trainingsWithCustomer = await Promise.all(\n        data.map(async (training) => {\n          const customerData = await fetchCustomer(training);\n          const customer = `${customerData.firstname} ${customerData.lastname}`;\n          return { ...training, customer };\n        })\n      );\n\n      setTrainings(trainingsWithCustomer);\n    } catch (error) {\n      console.error(\"Error fetching trainings:\", error);\n    }\n  };\n\n  useEffect(() => {\n    getTrainings();\n    if (trainingsModified) {\n      setTrainingsModified(false);\n    }\n  }, [trainingsModified]);\n  \n  \n\n  return (\n    <>\n      <div\n        className=\"ag-theme-material\"\n        style={{ width: \"80%\", height: 600, margin: \"auto\" }}\n      >\n        <AgGridReact\n          rowData={trainings}\n          columnDefs={columnDefs}\n          pagination={true}\n          paginationPageSize={10}\n        />\n      </div>\n      <Snackbar\n        open={open}\n        message={msg}\n        autoHideDuration={3000}\n        onClose={() => setOpen(false)}\n      />\n    </>\n  );\n}\n\n\nexport default Traininglist;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}